import*as e from"../../core/sdk/sdk.js";const i="__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__";class n extends e.SDKModel.SDKModel{domainToListeners=new Map;constructor(e){super(e),this.initialize(e)}initialize(i){const n=i.model(e.RuntimeModel.RuntimeModel);n&&(n.addEventListener(e.RuntimeModel.Events.BindingCalled,this.bindingCalled,this),this.enable(i).then((()=>this.onInitialization())))}onInitialization(){this.dispatchEventToListeners("Initialized")}bindingCalled(e){const i=e.data.payload;try{const{domain:e,message:n}=JSON.parse(i);this.dispatchMessageToDomainEventListeners(e,n)}catch(e){throw new Error("Failed to parse bindingCalled event payload:",e)}}subscribeToDomainMessages(e,i){let n=this.domainToListeners.get(e);n||(n=new Set,this.domainToListeners.set(e,n)),n.add(i)}unsubscribeFromDomainMessages(e,i){const n=this.domainToListeners.get(e);n&&n.delete(i)}dispatchMessageToDomainEventListeners(e,i){const n=this.domainToListeners.get(e);if(!n)return;const t=[];for(const e of n)try{e(i)}catch(e){t.push(e)}if(t.length>0)throw new AggregateError(t,`[ReactDevToolsBindingsModel] Error occurred when calling event listeners for domain: ${e}`)}async initializeDomain(n){const t=this.target().model(e.RuntimeModel.RuntimeModel);if(!t)throw new Error(`[ReactDevToolsBindingsModel] Failed to initialize domain ${n}: runtime model is not available`);await t.agent.invoke_evaluate({expression:`void ${i}.initializeDomain('${n}')`})}async sendMessage(n,t){const o=this.target().model(e.RuntimeModel.RuntimeModel);if(!o)throw new Error(`[ReactDevToolsBindingsModel] Failed to send message for domain ${n}: runtime model is not available`);const s=JSON.stringify(t);await o.agent.invoke_evaluate({expression:`${i}.sendMessage('${n}', '${s}')`})}async enable(n){const t=n.model(e.RuntimeModel.RuntimeModel);if(!t)throw new Error("[ReactDevToolsBindingsModel] Failed to enable model: runtime model is not available");await t.agent.invoke_evaluate({expression:`${i}.BINDING_NAME`}).then((e=>e.result.value)).then((e=>t.agent.invoke_addBinding({name:e})))}}e.SDKModel.SDKModel.register(n,{capabilities:4,autostart:!1});var t=Object.freeze({__proto__:null,ReactDevToolsBindingsModel:n});export{t as ReactDevToolsBindingsModel};
