import * as ldk from "lightningdevkit";
/**
 * Handles TCP connections using Node.JS's 'net' module given an `ldk.PeerManager`.
 */
export declare class NodeLDKNet {
    peer_manager: ldk.PeerManager;
    private ping_timer;
    private servers;
    constructor(peer_manager: ldk.PeerManager);
    /**
     * Disconnects all connections and releases all resources for this net handler.
     */
    stop(): void;
    /**
     * Processes any pending events for the PeerManager, sending queued messages.
     * You should call this (or peer_manager.process_events()) any time you take an action which
     * is likely to generate messages to send (eg send a payment, processing payment forwards,
     * etc).
     */
    process_events(): void;
    private descriptor_count;
    private get_descriptor;
    private static v4_addr_from_ip;
    private static v6_addr_from_ip;
    private static get_addr_from_socket;
    /**
     * Binds a listener on the given host and port, accepting incoming connections.
     */
    bind_listener(host: string, port: number): Promise<void>;
    /**
     * Establishes an outgoing connection to the given peer at the given host and port.
     *
     * Note that the peer will not appear in the PeerManager peers list until the socket has
     * connected and the initial handshake completes.
     */
    connect_peer(host: string, port: number, peer_node_id: Uint8Array): Promise<void>;
}
