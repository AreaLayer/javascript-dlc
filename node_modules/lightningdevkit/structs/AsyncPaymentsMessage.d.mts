import { ReleaseHeldHtlc } from '../structs/ReleaseHeldHtlc.mjs';
import { HeldHtlcAvailable } from '../structs/HeldHtlcAvailable.mjs';
import { OnionMessageContents } from '../structs/OnionMessageContents.mjs';
import { Result_AsyncPaymentsMessageDecodeErrorZ } from '../structs/Result_AsyncPaymentsMessageDecodeErrorZ.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * Possible async payment messages sent and received via an [`OnionMessage`].
 *
 * [`OnionMessage`]: crate::ln::msgs::OnionMessage
 */
export declare class AsyncPaymentsMessage extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    clone_ptr(): bigint;
    /**
     * Creates a copy of the AsyncPaymentsMessage
     */
    clone(): AsyncPaymentsMessage;
    /**
     * Utility method to constructs a new HeldHtlcAvailable-variant AsyncPaymentsMessage
     */
    static constructor_held_htlc_available(a: HeldHtlcAvailable): AsyncPaymentsMessage;
    /**
     * Utility method to constructs a new ReleaseHeldHtlc-variant AsyncPaymentsMessage
     */
    static constructor_release_held_htlc(a: ReleaseHeldHtlc): AsyncPaymentsMessage;
    /**
     * Constructs a new OnionMessageContents which calls the relevant methods on this_arg.
     * This copies the `inner` pointer in this_arg and thus the returned OnionMessageContents must be freed before this_arg is
     */
    as_OnionMessageContents(): OnionMessageContents;
    /**
     * Serialize the AsyncPaymentsMessage object into a byte array which can be read by AsyncPaymentsMessage_read
     */
    write(): Uint8Array;
    /**
     * Read a AsyncPaymentsMessage from a byte array, created by AsyncPaymentsMessage_write
     */
    static constructor_read(ser: Uint8Array, arg: bigint): Result_AsyncPaymentsMessageDecodeErrorZ;
}
/** A AsyncPaymentsMessage of type HeldHtlcAvailable */
export declare class AsyncPaymentsMessage_HeldHtlcAvailable extends AsyncPaymentsMessage {
    held_htlc_available: HeldHtlcAvailable;
}
/** A AsyncPaymentsMessage of type ReleaseHeldHtlc */
export declare class AsyncPaymentsMessage_ReleaseHeldHtlc extends AsyncPaymentsMessage {
    release_held_htlc: ReleaseHeldHtlc;
}
