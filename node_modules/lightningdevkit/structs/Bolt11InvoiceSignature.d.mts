import { CommonBase } from './CommonBase.mjs';
/**
 * Recoverable signature
 */
export declare class Bolt11InvoiceSignature extends CommonBase {
    get_a(): Uint8Array;
    set_a(val: Uint8Array): void;
    /**
     * Constructs a new Bolt11InvoiceSignature given each field
     */
    static constructor_new(a_arg: Uint8Array): Bolt11InvoiceSignature;
    clone_ptr(): bigint;
    /**
     * Creates a copy of the Bolt11InvoiceSignature
     */
    clone(): Bolt11InvoiceSignature;
    /**
     * Generates a non-cryptographic 64-bit hash of the Bolt11InvoiceSignature.
     */
    hash(): bigint;
    /**
     * Checks if two Bolt11InvoiceSignatures contain equal inner contents.
     * This ignores pointers and is_owned flags and looks at the values in fields.
     * Two objects with NULL inner values will be considered "equal" here.
     */
    eq(b: Bolt11InvoiceSignature): boolean;
}
