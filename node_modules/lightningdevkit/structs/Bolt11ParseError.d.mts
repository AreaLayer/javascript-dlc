import { Secp256k1Error } from '../enums/Secp256k1Error.mjs';
import { Bech32Error } from '../structs/Bech32Error.mjs';
import { CommonBase, UnqualifiedError } from './CommonBase.mjs';
/**
 * Errors that indicate what is wrong with the invoice. They have some granularity for debug
 * reasons, but should generally result in an \"invalid BOLT11 invoice\" message for the user.
 */
export declare class Bolt11ParseError extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    clone_ptr(): bigint;
    /**
     * Creates a copy of the Bolt11ParseError
     */
    clone(): Bolt11ParseError;
    /**
     * Utility method to constructs a new Bech32Error-variant Bolt11ParseError
     */
    static constructor_bech32_error(a: Bech32Error): Bolt11ParseError;
    /**
     * Utility method to constructs a new ParseAmountError-variant Bolt11ParseError
     */
    static constructor_parse_amount_error(a: UnqualifiedError): Bolt11ParseError;
    /**
     * Utility method to constructs a new MalformedSignature-variant Bolt11ParseError
     */
    static constructor_malformed_signature(a: Secp256k1Error): Bolt11ParseError;
    /**
     * Utility method to constructs a new BadPrefix-variant Bolt11ParseError
     */
    static constructor_bad_prefix(): Bolt11ParseError;
    /**
     * Utility method to constructs a new UnknownCurrency-variant Bolt11ParseError
     */
    static constructor_unknown_currency(): Bolt11ParseError;
    /**
     * Utility method to constructs a new UnknownSiPrefix-variant Bolt11ParseError
     */
    static constructor_unknown_si_prefix(): Bolt11ParseError;
    /**
     * Utility method to constructs a new MalformedHRP-variant Bolt11ParseError
     */
    static constructor_malformed_hrp(): Bolt11ParseError;
    /**
     * Utility method to constructs a new TooShortDataPart-variant Bolt11ParseError
     */
    static constructor_too_short_data_part(): Bolt11ParseError;
    /**
     * Utility method to constructs a new UnexpectedEndOfTaggedFields-variant Bolt11ParseError
     */
    static constructor_unexpected_end_of_tagged_fields(): Bolt11ParseError;
    /**
     * Utility method to constructs a new DescriptionDecodeError-variant Bolt11ParseError
     */
    static constructor_description_decode_error(a: UnqualifiedError): Bolt11ParseError;
    /**
     * Utility method to constructs a new PaddingError-variant Bolt11ParseError
     */
    static constructor_padding_error(): Bolt11ParseError;
    /**
     * Utility method to constructs a new IntegerOverflowError-variant Bolt11ParseError
     */
    static constructor_integer_overflow_error(): Bolt11ParseError;
    /**
     * Utility method to constructs a new InvalidSegWitProgramLength-variant Bolt11ParseError
     */
    static constructor_invalid_seg_wit_program_length(): Bolt11ParseError;
    /**
     * Utility method to constructs a new InvalidPubKeyHashLength-variant Bolt11ParseError
     */
    static constructor_invalid_pub_key_hash_length(): Bolt11ParseError;
    /**
     * Utility method to constructs a new InvalidScriptHashLength-variant Bolt11ParseError
     */
    static constructor_invalid_script_hash_length(): Bolt11ParseError;
    /**
     * Utility method to constructs a new InvalidRecoveryId-variant Bolt11ParseError
     */
    static constructor_invalid_recovery_id(): Bolt11ParseError;
    /**
     * Utility method to constructs a new InvalidSliceLength-variant Bolt11ParseError
     */
    static constructor_invalid_slice_length(a: string): Bolt11ParseError;
    /**
     * Utility method to constructs a new Skip-variant Bolt11ParseError
     */
    static constructor_skip(): Bolt11ParseError;
    /**
     * Checks if two Bolt11ParseErrors contain equal inner contents.
     * This ignores pointers and is_owned flags and looks at the values in fields.
     */
    eq(b: Bolt11ParseError): boolean;
    /**
     * Get the string representation of a Bolt11ParseError object
     */
    to_str(): string;
}
/** A Bolt11ParseError of type Bech32Error */
export declare class Bolt11ParseError_Bech32Error extends Bolt11ParseError {
    bech32_error: Bech32Error;
}
/** A Bolt11ParseError of type ParseAmountError */
export declare class Bolt11ParseError_ParseAmountError extends Bolt11ParseError {
    parse_amount_error: UnqualifiedError;
}
/** A Bolt11ParseError of type MalformedSignature */
export declare class Bolt11ParseError_MalformedSignature extends Bolt11ParseError {
    malformed_signature: Secp256k1Error;
}
/** A Bolt11ParseError of type BadPrefix */
export declare class Bolt11ParseError_BadPrefix extends Bolt11ParseError {
}
/** A Bolt11ParseError of type UnknownCurrency */
export declare class Bolt11ParseError_UnknownCurrency extends Bolt11ParseError {
}
/** A Bolt11ParseError of type UnknownSiPrefix */
export declare class Bolt11ParseError_UnknownSiPrefix extends Bolt11ParseError {
}
/** A Bolt11ParseError of type MalformedHRP */
export declare class Bolt11ParseError_MalformedHRP extends Bolt11ParseError {
}
/** A Bolt11ParseError of type TooShortDataPart */
export declare class Bolt11ParseError_TooShortDataPart extends Bolt11ParseError {
}
/** A Bolt11ParseError of type UnexpectedEndOfTaggedFields */
export declare class Bolt11ParseError_UnexpectedEndOfTaggedFields extends Bolt11ParseError {
}
/** A Bolt11ParseError of type DescriptionDecodeError */
export declare class Bolt11ParseError_DescriptionDecodeError extends Bolt11ParseError {
    description_decode_error: UnqualifiedError;
}
/** A Bolt11ParseError of type PaddingError */
export declare class Bolt11ParseError_PaddingError extends Bolt11ParseError {
}
/** A Bolt11ParseError of type IntegerOverflowError */
export declare class Bolt11ParseError_IntegerOverflowError extends Bolt11ParseError {
}
/** A Bolt11ParseError of type InvalidSegWitProgramLength */
export declare class Bolt11ParseError_InvalidSegWitProgramLength extends Bolt11ParseError {
}
/** A Bolt11ParseError of type InvalidPubKeyHashLength */
export declare class Bolt11ParseError_InvalidPubKeyHashLength extends Bolt11ParseError {
}
/** A Bolt11ParseError of type InvalidScriptHashLength */
export declare class Bolt11ParseError_InvalidScriptHashLength extends Bolt11ParseError {
}
/** A Bolt11ParseError of type InvalidRecoveryId */
export declare class Bolt11ParseError_InvalidRecoveryId extends Bolt11ParseError {
}
/** A Bolt11ParseError of type InvalidSliceLength */
export declare class Bolt11ParseError_InvalidSliceLength extends Bolt11ParseError {
    invalid_slice_length: string;
}
/** A Bolt11ParseError of type Skip */
export declare class Bolt11ParseError_Skip extends Bolt11ParseError {
}
