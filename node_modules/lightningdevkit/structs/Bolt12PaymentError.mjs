import { CommonBase } from './CommonBase.mjs';
import * as bindings from '../bindings.mjs';
/**
 * An error when attempting to pay a [`Bolt12Invoice`].
 */
export class Bolt12PaymentError extends CommonBase {
    constructor(_dummy, ptr) { super(ptr, bindings.Bolt12PaymentError_free); }
    /* @internal */
    static constr_from_ptr(ptr) {
        const raw_ty = bindings.LDKBolt12PaymentError_ty_from_ptr(ptr);
        switch (raw_ty) {
            case 0: return new Bolt12PaymentError_UnexpectedInvoice(ptr);
            case 1: return new Bolt12PaymentError_DuplicateInvoice(ptr);
            case 2: return new Bolt12PaymentError_UnknownRequiredFeatures(ptr);
            case 3: return new Bolt12PaymentError_SendingFailed(ptr);
            default:
                throw new Error('oops, this should be unreachable'); // Unreachable without extending the (internal) bindings interface
        }
    }
    clone_ptr() {
        const ret = bindings.Bolt12PaymentError_clone_ptr(this.ptr);
        return ret;
    }
    /**
     * Creates a copy of the Bolt12PaymentError
     */
    clone() {
        const ret = bindings.Bolt12PaymentError_clone(this.ptr);
        const ret_hu_conv = Bolt12PaymentError.constr_from_ptr(ret);
        CommonBase.add_ref_from(ret_hu_conv, this);
        return ret_hu_conv;
    }
    /**
     * Utility method to constructs a new UnexpectedInvoice-variant Bolt12PaymentError
     */
    static constructor_unexpected_invoice() {
        const ret = bindings.Bolt12PaymentError_unexpected_invoice();
        const ret_hu_conv = Bolt12PaymentError.constr_from_ptr(ret);
        CommonBase.add_ref_from(ret_hu_conv, ret_hu_conv);
        return ret_hu_conv;
    }
    /**
     * Utility method to constructs a new DuplicateInvoice-variant Bolt12PaymentError
     */
    static constructor_duplicate_invoice() {
        const ret = bindings.Bolt12PaymentError_duplicate_invoice();
        const ret_hu_conv = Bolt12PaymentError.constr_from_ptr(ret);
        CommonBase.add_ref_from(ret_hu_conv, ret_hu_conv);
        return ret_hu_conv;
    }
    /**
     * Utility method to constructs a new UnknownRequiredFeatures-variant Bolt12PaymentError
     */
    static constructor_unknown_required_features() {
        const ret = bindings.Bolt12PaymentError_unknown_required_features();
        const ret_hu_conv = Bolt12PaymentError.constr_from_ptr(ret);
        CommonBase.add_ref_from(ret_hu_conv, ret_hu_conv);
        return ret_hu_conv;
    }
    /**
     * Utility method to constructs a new SendingFailed-variant Bolt12PaymentError
     */
    static constructor_sending_failed(a) {
        const ret = bindings.Bolt12PaymentError_sending_failed(a);
        const ret_hu_conv = Bolt12PaymentError.constr_from_ptr(ret);
        CommonBase.add_ref_from(ret_hu_conv, ret_hu_conv);
        return ret_hu_conv;
    }
    /**
     * Checks if two Bolt12PaymentErrors contain equal inner contents.
     * This ignores pointers and is_owned flags and looks at the values in fields.
     */
    eq(b) {
        const ret = bindings.Bolt12PaymentError_eq(this.ptr, CommonBase.get_ptr_of(b));
        return ret;
    }
}
/** A Bolt12PaymentError of type UnexpectedInvoice */
export class Bolt12PaymentError_UnexpectedInvoice extends Bolt12PaymentError {
    /* @internal */
    constructor(ptr) {
        super(null, ptr);
    }
}
/** A Bolt12PaymentError of type DuplicateInvoice */
export class Bolt12PaymentError_DuplicateInvoice extends Bolt12PaymentError {
    /* @internal */
    constructor(ptr) {
        super(null, ptr);
    }
}
/** A Bolt12PaymentError of type UnknownRequiredFeatures */
export class Bolt12PaymentError_UnknownRequiredFeatures extends Bolt12PaymentError {
    /* @internal */
    constructor(ptr) {
        super(null, ptr);
    }
}
/** A Bolt12PaymentError of type SendingFailed */
export class Bolt12PaymentError_SendingFailed extends Bolt12PaymentError {
    /* @internal */
    constructor(ptr) {
        super(null, ptr);
        this.sending_failed = bindings.LDKBolt12PaymentError_SendingFailed_get_sending_failed(ptr);
    }
}
//# sourceMappingURL=Bolt12PaymentError.mjs.map