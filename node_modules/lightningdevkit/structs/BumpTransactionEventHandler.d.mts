import { Logger } from '../structs/Logger.mjs';
import { BroadcasterInterface } from '../structs/BroadcasterInterface.mjs';
import { SignerProvider } from '../structs/SignerProvider.mjs';
import { BumpTransactionEvent } from '../structs/BumpTransactionEvent.mjs';
import { CoinSelectionSource } from '../structs/CoinSelectionSource.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * A handler for [`Event::BumpTransaction`] events that sources confirmed UTXOs from a
 * [`CoinSelectionSource`] to fee bump transactions via Child-Pays-For-Parent (CPFP) or
 * Replace-By-Fee (RBF).
 *
 * [`Event::BumpTransaction`]: crate::events::Event::BumpTransaction
 */
export declare class BumpTransactionEventHandler extends CommonBase {
    /**
     * Returns a new instance capable of handling [`Event::BumpTransaction`] events.
     *
     * [`Event::BumpTransaction`]: crate::events::Event::BumpTransaction
     */
    static constructor_new(broadcaster: BroadcasterInterface, utxo_source: CoinSelectionSource, signer_provider: SignerProvider, logger: Logger): BumpTransactionEventHandler;
    /**
     * Handles all variants of [`BumpTransactionEvent`].
     */
    handle_event(event: BumpTransactionEvent): void;
}
