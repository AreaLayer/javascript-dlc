import { Option_u64Z } from '../structs/Option_u64Z.mjs';
import { Option_u32Z } from '../structs/Option_u32Z.mjs';
import { Option_u16Z } from '../structs/Option_u16Z.mjs';
import { Option_MaxDustHTLCExposureZ } from '../structs/Option_MaxDustHTLCExposureZ.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * A parallel struct to [`ChannelConfig`] to define partial updates.
 */
export declare class ChannelConfigUpdate extends CommonBase {
    get_forwarding_fee_proportional_millionths(): Option_u32Z;
    set_forwarding_fee_proportional_millionths(val: Option_u32Z): void;
    get_forwarding_fee_base_msat(): Option_u32Z;
    set_forwarding_fee_base_msat(val: Option_u32Z): void;
    get_cltv_expiry_delta(): Option_u16Z;
    set_cltv_expiry_delta(val: Option_u16Z): void;
    /**
     * Returns a copy of the field.
     */
    get_max_dust_htlc_exposure_msat(): Option_MaxDustHTLCExposureZ;
    set_max_dust_htlc_exposure_msat(val: Option_MaxDustHTLCExposureZ): void;
    get_force_close_avoidance_max_fee_satoshis(): Option_u64Z;
    set_force_close_avoidance_max_fee_satoshis(val: Option_u64Z): void;
    /**
     * Constructs a new ChannelConfigUpdate given each field
     */
    static constructor_new(forwarding_fee_proportional_millionths_arg: Option_u32Z, forwarding_fee_base_msat_arg: Option_u32Z, cltv_expiry_delta_arg: Option_u16Z, max_dust_htlc_exposure_msat_arg: Option_MaxDustHTLCExposureZ, force_close_avoidance_max_fee_satoshis_arg: Option_u64Z): ChannelConfigUpdate;
}
