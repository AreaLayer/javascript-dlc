import { Logger } from '../structs/Logger.mjs';
import { NetworkGraph } from '../structs/NetworkGraph.mjs';
import { EntropySource } from '../structs/EntropySource.mjs';
import { MessageRouter } from '../structs/MessageRouter.mjs';
import { Router } from '../structs/Router.mjs';
import { ProbabilisticScoringFeeParameters } from '../structs/ProbabilisticScoringFeeParameters.mjs';
import { LockableScore } from '../structs/LockableScore.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * A [`Router`] implemented using [`find_route`].
 *
 * # Privacy
 *
 * Implements [`MessageRouter`] by delegating to [`DefaultMessageRouter`]. See those docs for
 * privacy implications.
 */
export declare class DefaultRouter extends CommonBase {
    /**
     * Creates a new router.
     */
    static constructor_new(network_graph: NetworkGraph, logger: Logger, entropy_source: EntropySource, scorer: LockableScore, score_params: ProbabilisticScoringFeeParameters): DefaultRouter;
    /**
     * Constructs a new Router which calls the relevant methods on this_arg.
     * This copies the `inner` pointer in this_arg and thus the returned Router must be freed before this_arg is
     */
    as_Router(): Router;
    /**
     * Constructs a new MessageRouter which calls the relevant methods on this_arg.
     * This copies the `inner` pointer in this_arg and thus the returned MessageRouter must be freed before this_arg is
     */
    as_MessageRouter(): MessageRouter;
}
