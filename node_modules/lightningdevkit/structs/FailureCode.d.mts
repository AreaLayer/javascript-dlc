import { Option_C2Tuple_u64u16ZZ } from '../structs/Option_C2Tuple_u64u16ZZ.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * This enum is used to specify which error data to send to peers when failing back an HTLC
 * using [`ChannelManager::fail_htlc_backwards_with_reason`].
 *
 * For more info on failure codes, see <https://github.com/lightning/bolts/blob/master/04-onion-routing.md#failure-messages>.
 */
export declare class FailureCode extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    clone_ptr(): bigint;
    /**
     * Creates a copy of the FailureCode
     */
    clone(): FailureCode;
    /**
     * Utility method to constructs a new TemporaryNodeFailure-variant FailureCode
     */
    static constructor_temporary_node_failure(): FailureCode;
    /**
     * Utility method to constructs a new RequiredNodeFeatureMissing-variant FailureCode
     */
    static constructor_required_node_feature_missing(): FailureCode;
    /**
     * Utility method to constructs a new IncorrectOrUnknownPaymentDetails-variant FailureCode
     */
    static constructor_incorrect_or_unknown_payment_details(): FailureCode;
    /**
     * Utility method to constructs a new InvalidOnionPayload-variant FailureCode
     */
    static constructor_invalid_onion_payload(a: Option_C2Tuple_u64u16ZZ): FailureCode;
}
/** A FailureCode of type TemporaryNodeFailure */
export declare class FailureCode_TemporaryNodeFailure extends FailureCode {
}
/** A FailureCode of type RequiredNodeFeatureMissing */
export declare class FailureCode_RequiredNodeFeatureMissing extends FailureCode {
}
/** A FailureCode of type IncorrectOrUnknownPaymentDetails */
export declare class FailureCode_IncorrectOrUnknownPaymentDetails extends FailureCode {
}
/** A FailureCode of type InvalidOnionPayload */
export declare class FailureCode_InvalidOnionPayload extends FailureCode {
    invalid_onion_payload: Option_C2Tuple_u64u16ZZ;
}
