import { OffersContext } from '../structs/OffersContext.mjs';
import { Result_MessageContextDecodeErrorZ } from '../structs/Result_MessageContextDecodeErrorZ.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * Additional data included by the recipient in a [`BlindedMessagePath`].
 *
 * This data is encrypted by the recipient and will be given to the corresponding message handler
 * when handling a message sent over the [`BlindedMessagePath`]. The recipient can use this data to
 * authenticate the message or for further processing if needed.
 */
export declare class MessageContext extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    clone_ptr(): bigint;
    /**
     * Creates a copy of the MessageContext
     */
    clone(): MessageContext;
    /**
     * Utility method to constructs a new Offers-variant MessageContext
     */
    static constructor_offers(a: OffersContext): MessageContext;
    /**
     * Utility method to constructs a new Custom-variant MessageContext
     */
    static constructor_custom(a: Uint8Array): MessageContext;
    /**
     * Serialize the MessageContext object into a byte array which can be read by MessageContext_read
     */
    write(): Uint8Array;
    /**
     * Read a MessageContext from a byte array, created by MessageContext_write
     */
    static constructor_read(ser: Uint8Array): Result_MessageContextDecodeErrorZ;
}
/** A MessageContext of type Offers */
export declare class MessageContext_Offers extends MessageContext {
    offers: OffersContext;
}
/** A MessageContext of type Custom */
export declare class MessageContext_Custom extends MessageContext {
    custom: Uint8Array;
}
