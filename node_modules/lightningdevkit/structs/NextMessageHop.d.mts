import { CommonBase } from './CommonBase.mjs';
/**
 * The next hop to forward an onion message along its path.
 *
 * Note that payment blinded paths always specify their next hop using an explicit node id.
 */
export declare class NextMessageHop extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    clone_ptr(): bigint;
    /**
     * Creates a copy of the NextMessageHop
     */
    clone(): NextMessageHop;
    /**
     * Utility method to constructs a new NodeId-variant NextMessageHop
     */
    static constructor_node_id(a: Uint8Array): NextMessageHop;
    /**
     * Utility method to constructs a new ShortChannelId-variant NextMessageHop
     */
    static constructor_short_channel_id(a: bigint): NextMessageHop;
    /**
     * Generates a non-cryptographic 64-bit hash of the NextMessageHop.
     */
    hash(): bigint;
    /**
     * Checks if two NextMessageHops contain equal inner contents.
     * This ignores pointers and is_owned flags and looks at the values in fields.
     */
    eq(b: NextMessageHop): boolean;
}
/** A NextMessageHop of type NodeId */
export declare class NextMessageHop_NodeId extends NextMessageHop {
    node_id: Uint8Array;
}
/** A NextMessageHop of type ShortChannelId */
export declare class NextMessageHop_ShortChannelId extends NextMessageHop {
    short_channel_id: bigint;
}
