import { Result_OfferIdDecodeErrorZ } from '../structs/Result_OfferIdDecodeErrorZ.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * An identifier for an [`Offer`] built using [`DerivedMetadata`].
 */
export declare class OfferId extends CommonBase {
    get_a(): Uint8Array;
    set_a(val: Uint8Array): void;
    /**
     * Constructs a new OfferId given each field
     */
    static constructor_new(a_arg: Uint8Array): OfferId;
    clone_ptr(): bigint;
    /**
     * Creates a copy of the OfferId
     */
    clone(): OfferId;
    /**
     * Checks if two OfferIds contain equal inner contents.
     * This ignores pointers and is_owned flags and looks at the values in fields.
     * Two objects with NULL inner values will be considered "equal" here.
     */
    eq(b: OfferId): boolean;
    /**
     * Serialize the OfferId object into a byte array which can be read by OfferId_read
     */
    write(): Uint8Array;
    /**
     * Read a OfferId from a byte array, created by OfferId_write
     */
    static constructor_read(ser: Uint8Array): Result_OfferIdDecodeErrorZ;
}
