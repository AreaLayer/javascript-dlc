import { BigEndianScalar } from '../structs/BigEndianScalar.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * An enum which can either contain a crate::c_types::BigEndianScalar or not
 */
export declare class Option_BigEndianScalarZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Constructs a new COption_BigEndianScalarZ containing a crate::c_types::BigEndianScalar
     */
    static constructor_some(o: BigEndianScalar): Option_BigEndianScalarZ;
    /**
     * Constructs a new COption_BigEndianScalarZ containing nothing
     */
    static constructor_none(): Option_BigEndianScalarZ;
    clone_ptr(): bigint;
    /**
     * Creates a new COption_BigEndianScalarZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Option_BigEndianScalarZ;
}
/** A Option_BigEndianScalarZ of type Some */
export declare class Option_BigEndianScalarZ_Some extends Option_BigEndianScalarZ {
    some: BigEndianScalar;
}
/** A Option_BigEndianScalarZ of type None */
export declare class Option_BigEndianScalarZ_None extends Option_BigEndianScalarZ {
}
