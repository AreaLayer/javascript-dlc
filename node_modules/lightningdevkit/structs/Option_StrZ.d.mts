import { CommonBase } from './CommonBase.mjs';
/**
 * An enum which can either contain a crate::c_types::Str or not
 */
export declare class Option_StrZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Constructs a new COption_StrZ containing a crate::c_types::Str
     */
    static constructor_some(o: string): Option_StrZ;
    /**
     * Constructs a new COption_StrZ containing nothing
     */
    static constructor_none(): Option_StrZ;
    clone_ptr(): bigint;
    /**
     * Creates a new COption_StrZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Option_StrZ;
}
/** A Option_StrZ of type Some */
export declare class Option_StrZ_Some extends Option_StrZ {
    some: string;
}
/** A Option_StrZ of type None */
export declare class Option_StrZ_None extends Option_StrZ {
}
