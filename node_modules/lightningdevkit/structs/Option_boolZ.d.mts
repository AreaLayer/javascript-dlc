import { CommonBase } from './CommonBase.mjs';
/**
 * An enum which can either contain a bool or not
 */
export declare class Option_boolZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Constructs a new COption_boolZ containing a bool
     */
    static constructor_some(o: boolean): Option_boolZ;
    /**
     * Constructs a new COption_boolZ containing nothing
     */
    static constructor_none(): Option_boolZ;
    clone_ptr(): bigint;
    /**
     * Creates a new COption_boolZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Option_boolZ;
}
/** A Option_boolZ of type Some */
export declare class Option_boolZ_Some extends Option_boolZ {
    some: boolean;
}
/** A Option_boolZ of type None */
export declare class Option_boolZ_None extends Option_boolZ {
}
