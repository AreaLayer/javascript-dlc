import { ForwardTlvs } from '../structs/ForwardTlvs.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * An intermediate node, its outbound channel, and relay parameters.
 */
export declare class PaymentForwardNode extends CommonBase {
    /**
     * The TLVs for this node's [`BlindedHop`], where the fee parameters contained within are also
     * used for [`BlindedPayInfo`] construction.
     */
    get_tlvs(): ForwardTlvs;
    /**
     * The TLVs for this node's [`BlindedHop`], where the fee parameters contained within are also
     * used for [`BlindedPayInfo`] construction.
     */
    set_tlvs(val: ForwardTlvs): void;
    /**
     * This node's pubkey.
     */
    get_node_id(): Uint8Array;
    /**
     * This node's pubkey.
     */
    set_node_id(val: Uint8Array): void;
    /**
     * The maximum value, in msat, that may be accepted by this node.
     */
    get_htlc_maximum_msat(): bigint;
    /**
     * The maximum value, in msat, that may be accepted by this node.
     */
    set_htlc_maximum_msat(val: bigint): void;
    /**
     * Constructs a new PaymentForwardNode given each field
     */
    static constructor_new(tlvs_arg: ForwardTlvs, node_id_arg: Uint8Array, htlc_maximum_msat_arg: bigint): PaymentForwardNode;
    clone_ptr(): bigint;
    /**
     * Creates a copy of the PaymentForwardNode
     */
    clone(): PaymentForwardNode;
}
