import { CommonBase } from './CommonBase.mjs';
import * as bindings from '../bindings.mjs';
/**
 * A string that displays only printable characters, replacing control characters with
 * [`core::char::REPLACEMENT_CHARACTER`].
 */
export class PrintableString extends CommonBase {
    /* @internal */
    constructor(_dummy, ptr) {
        super(ptr, bindings.PrintableString_free);
    }
    get_a() {
        const ret = bindings.PrintableString_get_a(this.ptr);
        const ret_conv = bindings.decodeString(ret);
        return ret_conv;
    }
    set_a(val) {
        bindings.PrintableString_set_a(this.ptr, bindings.encodeString(val));
    }
    /**
     * Constructs a new PrintableString given each field
     */
    static constructor_new(a_arg) {
        const ret = bindings.PrintableString_new(bindings.encodeString(a_arg));
        const ret_hu_conv = new PrintableString(null, ret);
        CommonBase.add_ref_from(ret_hu_conv, ret_hu_conv);
        return ret_hu_conv;
    }
    /**
     * Get the string representation of a PrintableString object
     */
    to_str() {
        const ret = bindings.PrintableString_to_str(this.ptr);
        const ret_conv = bindings.decodeString(ret);
        return ret_conv;
    }
}
//# sourceMappingURL=PrintableString.mjs.map