import { CommonBase } from './CommonBase.mjs';
import * as bindings from '../bindings.mjs';
/**
 * A [`CandidateRouteHop::PrivateHop`] entry.
 */
export class PrivateHopCandidate extends CommonBase {
    /* @internal */
    constructor(_dummy, ptr) {
        super(ptr, bindings.PrivateHopCandidate_free);
    }
    clone_ptr() {
        const ret = bindings.PrivateHopCandidate_clone_ptr(this.ptr);
        return ret;
    }
    /**
     * Creates a copy of the PrivateHopCandidate
     */
    clone() {
        const ret = bindings.PrivateHopCandidate_clone(this.ptr);
        const ret_hu_conv = new PrivateHopCandidate(null, ret);
        CommonBase.add_ref_from(ret_hu_conv, this);
        return ret_hu_conv;
    }
}
//# sourceMappingURL=PrivateHopCandidate.mjs.map