import { CommonBase } from './CommonBase.mjs';
import * as bindings from '../bindings.mjs';
/**
 * A [`CandidateRouteHop::PublicHop`] entry.
 */
export class PublicHopCandidate extends CommonBase {
    /* @internal */
    constructor(_dummy, ptr) {
        super(ptr, bindings.PublicHopCandidate_free);
    }
    /**
     * The short channel ID of the channel, i.e. the identifier by which we refer to this
     * channel.
     */
    get_short_channel_id() {
        const ret = bindings.PublicHopCandidate_get_short_channel_id(this.ptr);
        return ret;
    }
    /**
     * The short channel ID of the channel, i.e. the identifier by which we refer to this
     * channel.
     */
    set_short_channel_id(val) {
        bindings.PublicHopCandidate_set_short_channel_id(this.ptr, val);
    }
    clone_ptr() {
        const ret = bindings.PublicHopCandidate_clone_ptr(this.ptr);
        return ret;
    }
    /**
     * Creates a copy of the PublicHopCandidate
     */
    clone() {
        const ret = bindings.PublicHopCandidate_clone(this.ptr);
        const ret_hu_conv = new PublicHopCandidate(null, ret);
        CommonBase.add_ref_from(ret_hu_conv, this);
        return ret_hu_conv;
    }
}
//# sourceMappingURL=PublicHopCandidate.mjs.map