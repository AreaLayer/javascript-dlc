import { PaymentContext } from '../structs/PaymentContext.mjs';
import { PaymentConstraints } from '../structs/PaymentConstraints.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * Data to construct a [`BlindedHop`] for receiving a payment. This payload is custom to LDK and
 * may not be valid if received by another lightning implementation.
 */
export declare class ReceiveTlvs extends CommonBase {
    /**
     * Used to authenticate the sender of a payment to the receiver and tie MPP HTLCs together.
     */
    get_payment_secret(): Uint8Array;
    /**
     * Used to authenticate the sender of a payment to the receiver and tie MPP HTLCs together.
     */
    set_payment_secret(val: Uint8Array): void;
    /**
     * Constraints for the receiver of this payment.
     */
    get_payment_constraints(): PaymentConstraints;
    /**
     * Constraints for the receiver of this payment.
     */
    set_payment_constraints(val: PaymentConstraints): void;
    /**
     * Context for the receiver of this payment.
     */
    get_payment_context(): PaymentContext;
    /**
     * Context for the receiver of this payment.
     */
    set_payment_context(val: PaymentContext): void;
    /**
     * Constructs a new ReceiveTlvs given each field
     */
    static constructor_new(payment_secret_arg: Uint8Array, payment_constraints_arg: PaymentConstraints, payment_context_arg: PaymentContext): ReceiveTlvs;
    clone_ptr(): bigint;
    /**
     * Creates a copy of the ReceiveTlvs
     */
    clone(): ReceiveTlvs;
    /**
     * Serialize the ReceiveTlvs object into a byte array which can be read by ReceiveTlvs_read
     */
    write(): Uint8Array;
}
