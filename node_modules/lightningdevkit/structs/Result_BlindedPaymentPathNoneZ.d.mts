import { BlindedPaymentPath } from '../structs/BlindedPaymentPath.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_BlindedPaymentPathNoneZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_BlindedPaymentPathNoneZ in the success state.
     */
    static constructor_ok(o: BlindedPaymentPath): Result_BlindedPaymentPathNoneZ;
    /**
     * Creates a new CResult_BlindedPaymentPathNoneZ in the error state.
     */
    static constructor_err(): Result_BlindedPaymentPathNoneZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_BlindedPaymentPathNoneZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_BlindedPaymentPathNoneZ;
}
export declare class Result_BlindedPaymentPathNoneZ_OK extends Result_BlindedPaymentPathNoneZ {
    res: BlindedPaymentPath;
}
export declare class Result_BlindedPaymentPathNoneZ_Err extends Result_BlindedPaymentPathNoneZ {
}
