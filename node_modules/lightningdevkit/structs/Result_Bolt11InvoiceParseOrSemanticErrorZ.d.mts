import { Bolt11Invoice } from '../structs/Bolt11Invoice.mjs';
import { ParseOrSemanticError } from '../structs/ParseOrSemanticError.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_Bolt11InvoiceParseOrSemanticErrorZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_Bolt11InvoiceParseOrSemanticErrorZ in the success state.
     */
    static constructor_ok(o: Bolt11Invoice): Result_Bolt11InvoiceParseOrSemanticErrorZ;
    /**
     * Creates a new CResult_Bolt11InvoiceParseOrSemanticErrorZ in the error state.
     */
    static constructor_err(e: ParseOrSemanticError): Result_Bolt11InvoiceParseOrSemanticErrorZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_Bolt11InvoiceParseOrSemanticErrorZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_Bolt11InvoiceParseOrSemanticErrorZ;
}
export declare class Result_Bolt11InvoiceParseOrSemanticErrorZ_OK extends Result_Bolt11InvoiceParseOrSemanticErrorZ {
    res: Bolt11Invoice;
}
export declare class Result_Bolt11InvoiceParseOrSemanticErrorZ_Err extends Result_Bolt11InvoiceParseOrSemanticErrorZ {
    err: ParseOrSemanticError;
}
