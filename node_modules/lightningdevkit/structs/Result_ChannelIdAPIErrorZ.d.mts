import { APIError } from '../structs/APIError.mjs';
import { ChannelId } from '../structs/ChannelId.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_ChannelIdAPIErrorZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_ChannelIdAPIErrorZ in the success state.
     */
    static constructor_ok(o: ChannelId): Result_ChannelIdAPIErrorZ;
    /**
     * Creates a new CResult_ChannelIdAPIErrorZ in the error state.
     */
    static constructor_err(e: APIError): Result_ChannelIdAPIErrorZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_ChannelIdAPIErrorZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_ChannelIdAPIErrorZ;
}
export declare class Result_ChannelIdAPIErrorZ_OK extends Result_ChannelIdAPIErrorZ {
    res: ChannelId;
}
export declare class Result_ChannelIdAPIErrorZ_Err extends Result_ChannelIdAPIErrorZ {
    err: APIError;
}
