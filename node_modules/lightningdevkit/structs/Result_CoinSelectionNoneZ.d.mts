import { CoinSelection } from '../structs/CoinSelection.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_CoinSelectionNoneZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_CoinSelectionNoneZ in the success state.
     */
    static constructor_ok(o: CoinSelection): Result_CoinSelectionNoneZ;
    /**
     * Creates a new CResult_CoinSelectionNoneZ in the error state.
     */
    static constructor_err(): Result_CoinSelectionNoneZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_CoinSelectionNoneZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_CoinSelectionNoneZ;
}
export declare class Result_CoinSelectionNoneZ_OK extends Result_CoinSelectionNoneZ {
    res: CoinSelection;
}
export declare class Result_CoinSelectionNoneZ_Err extends Result_CoinSelectionNoneZ {
}
