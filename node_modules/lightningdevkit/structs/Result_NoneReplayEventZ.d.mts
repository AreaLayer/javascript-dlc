import { ReplayEvent } from '../structs/ReplayEvent.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_NoneReplayEventZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_NoneReplayEventZ in the success state.
     */
    static constructor_ok(): Result_NoneReplayEventZ;
    /**
     * Creates a new CResult_NoneReplayEventZ in the error state.
     */
    static constructor_err(e: ReplayEvent): Result_NoneReplayEventZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_NoneReplayEventZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_NoneReplayEventZ;
}
export declare class Result_NoneReplayEventZ_OK extends Result_NoneReplayEventZ {
}
export declare class Result_NoneReplayEventZ_Err extends Result_NoneReplayEventZ {
    err: ReplayEvent;
}
