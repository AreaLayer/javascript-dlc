import { DecodeError } from '../structs/DecodeError.mjs';
import { Logger } from '../structs/Logger.mjs';
import { BestBlock } from '../structs/BestBlock.mjs';
import { BroadcasterInterface } from '../structs/BroadcasterInterface.mjs';
import { FeeEstimator } from '../structs/FeeEstimator.mjs';
import { Option_FilterZ } from '../structs/Option_FilterZ.mjs';
import { ChangeDestinationSource } from '../structs/ChangeDestinationSource.mjs';
import { KVStore } from '../structs/KVStore.mjs';
import { OutputSpender } from '../structs/OutputSpender.mjs';
import { OutputSweeper } from '../structs/OutputSweeper.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_OutputSweeperDecodeErrorZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_OutputSweeperDecodeErrorZ in the success state.
     */
    static constructor_ok(o_best_block: BestBlock, o_broadcaster: BroadcasterInterface, o_fee_estimator: FeeEstimator, o_chain_data_source: Option_FilterZ, o_output_spender: OutputSpender, o_change_destination_source: ChangeDestinationSource, o_kv_store: KVStore, o_logger: Logger): Result_OutputSweeperDecodeErrorZ;
    /**
     * Creates a new CResult_OutputSweeperDecodeErrorZ in the error state.
     */
    static constructor_err(e: DecodeError): Result_OutputSweeperDecodeErrorZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
}
export declare class Result_OutputSweeperDecodeErrorZ_OK extends Result_OutputSweeperDecodeErrorZ {
    res: OutputSweeper;
}
export declare class Result_OutputSweeperDecodeErrorZ_Err extends Result_OutputSweeperDecodeErrorZ {
    err: DecodeError;
}
