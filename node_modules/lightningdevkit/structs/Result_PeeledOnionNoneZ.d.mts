import { PeeledOnion } from '../structs/PeeledOnion.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_PeeledOnionNoneZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_PeeledOnionNoneZ in the success state.
     */
    static constructor_ok(o: PeeledOnion): Result_PeeledOnionNoneZ;
    /**
     * Creates a new CResult_PeeledOnionNoneZ in the error state.
     */
    static constructor_err(): Result_PeeledOnionNoneZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_PeeledOnionNoneZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_PeeledOnionNoneZ;
}
export declare class Result_PeeledOnionNoneZ_OK extends Result_PeeledOnionNoneZ {
    res: PeeledOnion;
}
export declare class Result_PeeledOnionNoneZ_Err extends Result_PeeledOnionNoneZ {
}
