import { PendingHTLCInfo } from '../structs/PendingHTLCInfo.mjs';
import { InboundHTLCErr } from '../structs/InboundHTLCErr.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_PendingHTLCInfoInboundHTLCErrZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_PendingHTLCInfoInboundHTLCErrZ in the success state.
     */
    static constructor_ok(o: PendingHTLCInfo): Result_PendingHTLCInfoInboundHTLCErrZ;
    /**
     * Creates a new CResult_PendingHTLCInfoInboundHTLCErrZ in the error state.
     */
    static constructor_err(e: InboundHTLCErr): Result_PendingHTLCInfoInboundHTLCErrZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_PendingHTLCInfoInboundHTLCErrZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_PendingHTLCInfoInboundHTLCErrZ;
}
export declare class Result_PendingHTLCInfoInboundHTLCErrZ_OK extends Result_PendingHTLCInfoInboundHTLCErrZ {
    res: PendingHTLCInfo;
}
export declare class Result_PendingHTLCInfoInboundHTLCErrZ_Err extends Result_PendingHTLCInfoInboundHTLCErrZ {
    err: InboundHTLCErr;
}
