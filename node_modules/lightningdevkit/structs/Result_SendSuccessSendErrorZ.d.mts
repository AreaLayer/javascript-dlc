import { SendError } from '../structs/SendError.mjs';
import { SendSuccess } from '../structs/SendSuccess.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_SendSuccessSendErrorZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_SendSuccessSendErrorZ in the success state.
     */
    static constructor_ok(o: SendSuccess): Result_SendSuccessSendErrorZ;
    /**
     * Creates a new CResult_SendSuccessSendErrorZ in the error state.
     */
    static constructor_err(e: SendError): Result_SendSuccessSendErrorZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_SendSuccessSendErrorZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_SendSuccessSendErrorZ;
}
export declare class Result_SendSuccessSendErrorZ_OK extends Result_SendSuccessSendErrorZ {
    res: SendSuccess;
}
export declare class Result_SendSuccessSendErrorZ_Err extends Result_SendSuccessSendErrorZ {
    err: SendError;
}
