import { SocketAddressParseError } from '../enums/SocketAddressParseError.mjs';
import { SocketAddress } from '../structs/SocketAddress.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_SocketAddressSocketAddressParseErrorZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_SocketAddressSocketAddressParseErrorZ in the success state.
     */
    static constructor_ok(o: SocketAddress): Result_SocketAddressSocketAddressParseErrorZ;
    /**
     * Creates a new CResult_SocketAddressSocketAddressParseErrorZ in the error state.
     */
    static constructor_err(e: SocketAddressParseError): Result_SocketAddressSocketAddressParseErrorZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_SocketAddressSocketAddressParseErrorZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_SocketAddressSocketAddressParseErrorZ;
}
export declare class Result_SocketAddressSocketAddressParseErrorZ_OK extends Result_SocketAddressSocketAddressParseErrorZ {
    res: SocketAddress;
}
export declare class Result_SocketAddressSocketAddressParseErrorZ_Err extends Result_SocketAddressSocketAddressParseErrorZ {
    err: SocketAddressParseError;
}
