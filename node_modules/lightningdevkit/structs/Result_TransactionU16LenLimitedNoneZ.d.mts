import { TransactionU16LenLimited } from '../structs/TransactionU16LenLimited.mjs';
import { CommonBase } from './CommonBase.mjs';
export declare class Result_TransactionU16LenLimitedNoneZ extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    /**
     * Creates a new CResult_TransactionU16LenLimitedNoneZ in the success state.
     */
    static constructor_ok(o: TransactionU16LenLimited): Result_TransactionU16LenLimitedNoneZ;
    /**
     * Creates a new CResult_TransactionU16LenLimitedNoneZ in the error state.
     */
    static constructor_err(): Result_TransactionU16LenLimitedNoneZ;
    /**
     * Checks if the given object is currently in the success state
     */
    is_ok(): boolean;
    clone_ptr(): bigint;
    /**
     * Creates a new CResult_TransactionU16LenLimitedNoneZ which has the same data as `orig`
     * but with all dynamically-allocated buffers duplicated in new buffers.
     */
    clone(): Result_TransactionU16LenLimitedNoneZ;
}
export declare class Result_TransactionU16LenLimitedNoneZ_OK extends Result_TransactionU16LenLimitedNoneZ {
    res: TransactionU16LenLimited;
}
export declare class Result_TransactionU16LenLimitedNoneZ_Err extends Result_TransactionU16LenLimitedNoneZ {
}
