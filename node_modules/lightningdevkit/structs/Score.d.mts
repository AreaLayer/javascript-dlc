import { ScoreLookUpInterface } from '../structs/ScoreLookUp.mjs';
import { ScoreUpdateInterface } from '../structs/ScoreUpdate.mjs';
import { CommonBase } from './CommonBase.mjs';
/** An implementation of Score */
export interface ScoreInterface {
    /**Serialize the object into a byte array
     */
    write(): Uint8Array;
}
/**
 * A trait which can both lookup and update routing channel penalty scores.
 *
 * This is used in places where both bounds are required and implemented for all types which
 * implement [`ScoreLookUp`] and [`ScoreUpdate`].
 *
 * Bindings users may need to manually implement this for their custom scoring implementations.
 */
export declare class Score extends CommonBase {
    /** Creates a new instance of Score from a given implementation */
    static new_impl(arg: ScoreInterface, scoreLookUp_impl: ScoreLookUpInterface, scoreUpdate_impl: ScoreUpdateInterface): Score;
    /**
     * Serialize the object into a byte array
     */
    write(): Uint8Array;
}
