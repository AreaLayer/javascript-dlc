import { InFlightHtlcs } from '../structs/InFlightHtlcs.mjs';
import { ScoreLookUp } from '../structs/ScoreLookUp.mjs';
import { CommonBase } from './CommonBase.mjs';
/**
 * [`ScoreLookUp`] implementation that factors in in-flight HTLC liquidity.
 *
 * Useful for custom [`Router`] implementations to wrap their [`ScoreLookUp`] on-the-fly when calling
 * [`find_route`].
 *
 * [`ScoreLookUp`]: crate::routing::scoring::ScoreLookUp
 */
export declare class ScorerAccountingForInFlightHtlcs extends CommonBase {
    /**
     * Initialize a new `ScorerAccountingForInFlightHtlcs`.
     */
    static constructor_new(scorer: ScoreLookUp, inflight_htlcs: InFlightHtlcs): ScorerAccountingForInFlightHtlcs;
    /**
     * Constructs a new ScoreLookUp which calls the relevant methods on this_arg.
     * This copies the `inner` pointer in this_arg and thus the returned ScoreLookUp must be freed before this_arg is
     */
    as_ScoreLookUp(): ScoreLookUp;
}
