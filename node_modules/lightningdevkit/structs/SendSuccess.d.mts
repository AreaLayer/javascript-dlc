import { CommonBase } from './CommonBase.mjs';
/**
 * Result of successfully [sending an onion message].
 *
 * [sending an onion message]: OnionMessenger::send_onion_message
 */
export declare class SendSuccess extends CommonBase {
    protected constructor(_dummy: null, ptr: bigint);
    clone_ptr(): bigint;
    /**
     * Creates a copy of the SendSuccess
     */
    clone(): SendSuccess;
    /**
     * Utility method to constructs a new Buffered-variant SendSuccess
     */
    static constructor_buffered(): SendSuccess;
    /**
     * Utility method to constructs a new BufferedAwaitingConnection-variant SendSuccess
     */
    static constructor_buffered_awaiting_connection(a: Uint8Array): SendSuccess;
    /**
     * Generates a non-cryptographic 64-bit hash of the SendSuccess.
     */
    hash(): bigint;
    /**
     * Checks if two SendSuccesss contain equal inner contents.
     * This ignores pointers and is_owned flags and looks at the values in fields.
     */
    eq(b: SendSuccess): boolean;
}
/** A SendSuccess of type Buffered */
export declare class SendSuccess_Buffered extends SendSuccess {
}
/** A SendSuccess of type BufferedAwaitingConnection */
export declare class SendSuccess_BufferedAwaitingConnection extends SendSuccess {
    buffered_awaiting_connection: Uint8Array;
}
