import { CommonBase } from './CommonBase.mjs';
/**
 * A hash for use in a specific context by tweaking with a context-dependent tag as per [BIP 340]
 * and computed over the merkle root of a TLV stream to sign as defined in [BOLT 12].
 *
 * [BIP 340]: https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki
 * [BOLT 12]: https://github.com/rustyrussell/lightning-rfc/blob/guilt/offers/12-offer-encoding.md#signature-calculation
 */
export declare class TaggedHash extends CommonBase {
    clone_ptr(): bigint;
    /**
     * Creates a copy of the TaggedHash
     */
    clone(): TaggedHash;
    /**
     * Returns the digest to sign.
     */
    as_digest(): Uint8Array;
    /**
     * Returns the tag used in the tagged hash.
     */
    tag(): string;
    /**
     * Returns the merkle root used in the tagged hash.
     */
    merkle_root(): Uint8Array;
}
