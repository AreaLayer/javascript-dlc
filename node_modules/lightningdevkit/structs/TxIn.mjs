import { CommonBase } from './CommonBase.mjs';
import * as bindings from '../bindings.mjs';
export class TxIn extends CommonBase {
    /* @internal */
    constructor(_dummy, ptr) {
        super(ptr, bindings.TxIn_free);
        this.witness = bindings.decodeUint8Array(bindings.TxIn_get_witness(ptr));
        this.script_sig = bindings.decodeUint8Array(bindings.TxIn_get_script_sig(ptr));
        this.sequence = bindings.TxIn_get_sequence(ptr);
        this.previous_txid = bindings.decodeUint8Array(bindings.TxIn_get_previous_txid(ptr));
        this.previous_vout = bindings.TxIn_get_previous_vout(ptr);
    }
    static constructor_new(witness, script_sig, sequence, previous_txid, previous_vout) {
        return new TxIn(null, bindings.TxIn_new(bindings.encodeUint8Array(witness), bindings.encodeUint8Array(script_sig), sequence, bindings.encodeUint8Array(previous_txid), previous_vout));
    }
}
//# sourceMappingURL=TxIn.mjs.map